- name: Install apache letsencrypt-catchall
  copy: src=letsencrypt.conf dest=/etc/apache2/conf-available/letsencrypt.conf
  when: letsencrypt_enable_apache_catchall
  notify: reload apache2

- name: Enable apache letsencrypt-catchall
  file:
    src: "/etc/apache2/conf-available/letsencrypt.conf"
    dest: "/etc/apache2/conf-enabled/letsencrypt.conf"
    state: link
  when: letsencrypt_enable_apache_catchall
  notify: reload apache2

- name: Create letsencrypt dir
  file: path={{ letsencrypt_dir }} state=directory

- name: Create acme-challenge dir
  file: path={{ letsencrypt_challenge_dir }} state=directory

- name: Download letsencrypt intermediate
  get_url:
    url: https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem
    dest: "{{ letsencrypt_dir }}/lets-encrypt-x3-cross-signed.pem"

- name: Clone acme-tiny
  git:
    repo: https://github.com/diafygi/acme-tiny.git
    dest: "{{ letsencrypt_dir }}/acme-tiny"
    update: yes

- name: Make directories for certificates
  file:
    path: "{{ letsencrypt_dir }}/{{ item.name }}"
    state: directory
    owner: "{{ item.user|default(omit) }}"
    group : "{{ item.group|default(omit) }}"
    mode: go-rwx
  with_items: "{{ letsencrypt_certs }}"

- name: Create account key
  shell: openssl genrsa 4096 > {{ letsencrypt_dir }}/{{ item.name }}/account.key
  args:
    creates: "{{ letsencrypt_dir }}/{{ item.name }}/account.key"
  with_items: "{{ letsencrypt_certs }}"

- name: Create private key
  command: openssl genrsa -out {{ letsencrypt_dir }}/{{ item.name }}/domain.key 2048 -sha256
  args:
    creates: "{{ letsencrypt_dir }}/{{ item.name }}/domain.key"
  with_items: "{{ letsencrypt_certs }}"

- name: Create openssl config file for csr
  template: src=openssl.cnf dest={{ letsencrypt_dir }}/{{ item.name }}
  with_items: "{{ letsencrypt_certs }}"
  register: openssl_config_changed

- name: Create csr
  shell: openssl req -new -sha256 -key {{ letsencrypt_dir }}/{{ item.1.name }}/domain.key -subj "/" -reqexts SAN -config {{ letsencrypt_dir }}/{{ item.1.name }}/openssl.cnf > {{ letsencrypt_dir }}/{{ item.1.name }}/domain.csr
  with_indexed_items: "{{ letsencrypt_certs }}"
  when: openssl_config_changed.results[item.0]|changed

- name: Create renew script
  template: src=renew.sh dest={{ letsencrypt_dir }}/{{ item.name }}/renew.sh mode=o+x
  with_items: "{{ letsencrypt_certs }}"

- name: Run certificate generation if subdomains have changed
  command: "{{ letsencrypt_dir }}/{{ item.1.name }}/renew.sh"
  with_indexed_items: "{{ letsencrypt_certs }}"
  when: openssl_config_changed.results[item.0]|changed

- name: Create renew cronjob
  template: src=cron dest=/etc/cron.d/letsencrypt
